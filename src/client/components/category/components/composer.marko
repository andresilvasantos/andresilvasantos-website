import axios from 'axios'
import { calculateSidebarButtonMode } from "src/client/utils"
import copy from 'src/client/copy.json'

class {
    onCreate(input, out) {
        this.state = {
            category: input.category,
            csrf: out.global.csrfToken,
            settings: out.global.globalSettings ?
                out.global.globalSettings[input.category] :
                {}
        }
    }

    onMount() {
        const sectionKeys = ['header', 'grid']
        const sectionElements = []

        sectionKeys.map(key => {
            sectionElements.push(this.getComponent(key).getEl())
        })
        calculateSidebarButtonMode(sectionElements)
    }

    copyFromCategory() {
        switch(this.state.category) {
            case 'photography':
                return copy.categories.photography
            case 'electronicmusic':
                return copy.categories.electronicMusic
            case 'movies':
                return copy.categories.movies
            case 'shortfilms':
                return copy.categories.shortFilms
            case 'codeprojects':
                return copy.categories.codeProjects
            case 'tvshows':
                return copy.categories.tvShows
            case 'videogames':
                return copy.categories.videoGames
            case 'music':
                return copy.categories.music
            default:
                return {
                    intro: 'Missing',
                    title: 'Missing',
                    watermark: 'Missing'
                }
        }
    }

    updateContent(content, contentName) {
        const category = this.state.category
        const that = this

        axios.post('/settings/category', {
            category: category,
            content: content,
            contentName: contentName,
            _csrf: this.state.csrf
        })
        .then(function (response) {
            if(!response.data.code) {
                that.state.settings = response.data.content[category]
                that.setStateDirty('settings')
            }
            else {
                console.log(response.data)
            }
        })
        .catch(function (error) {
            console.log(error)
        })
    }
}

$ const backgroundImage = state.settings ? state.settings.background : ''
$ const description = state.settings ? state.settings.description : ''

<div>
    <section-header-default.header
        copy=component.copyFromCategory()
        description=description
        imageUrl=(
            backgroundImage ?
            `/static/uploads/${backgroundImage}_x1.jpg` :
            ''
        )
        key='header'
        on-updateContent('updateContent')
    />
    <section-grid key="grid" category=state.category content=input.content />
</div>

style.less {
    .header {
        height: 100vh;
        top: 0;
        width: 100%;
        .position-sticky();

        .responsive-max(@break-md, {
            position: relative;
        });
    }

    .section-grid {
        position: relative;
        width: 100%;
    }
};
